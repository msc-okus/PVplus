<!--<h4>Chart4 <br> {{ content.data|raw }} {{ content.headline }}</h4>-->
<script>
    am4core.ready(function() {
        // Create chart instance

        let chart = am4core.create("amchart-holder", am4charts.XYChart);

        chart.data = {{ content.data|raw }};

        chart.preloader.disabled = false;
        chart.preloader.transitionDuration = 0;
        chart.preloader.progress = 5;
        chart.scrollbarX = new am4core.Scrollbar();
        chart.scrollbarY = new am4core.Scrollbar();


        let title = chart.titles.create();
        title.text = "{{ content.headline }} - {{ aktAnlage.anlName }} ({{ form.from|date("Y-m-d") }}{% if form.optionDate != 1 %} to {{ form.to|date("Y-m-d") }}{% endif %})";
        title.fontSize = 16;
        title.marginBottom = 30;

        // Create axes
        let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());
        let yAxis = chart.yAxes.push(new am4charts.CategoryAxis());
        xAxis.dataFields.category = "xinv";
        yAxis.dataFields.category = "ydate";
        yAxis.renderer.labels.template.fontSize = 10;
        xAxis.renderer.labels.template.fontSize = 10;
        xAxis.renderer.grid.template.disabled = true;
        xAxis.renderer.minGridDistance = 5;
        xAxis.renderer.inversed = true;
        yAxis.renderer.grid.template.disabled = true;
        yAxis.renderer.inversed = true;
        yAxis.renderer.minGridDistance = 5;
        xAxis.renderer.labels.template.rotation = -45;
        xAxis.renderer.labels.template.horizontalCenter = "right";
        xAxis.renderer.labels.template.verticalCenter = "middle";

        // Create series
        let series = chart.series.push(new am4charts.ColumnSeries());
        series.dataFields.categoryX = "xinv";
        series.dataFields.categoryY = "ydate";
        series.dataFields.value = "value";
        series.sequencedInterpolation = false;
        series.defaultState.transitionDuration = 2000;
        series.columns.template.width = am4core.percent(100);
        series.columns.template.height = am4core.percent(100);

        var columnTemplate = series.columns.template;
        columnTemplate.strokeWidth = 0;
        columnTemplate.strokeOpacity = 2;
        columnTemplate.stroke = am4core.color("#ffffff");
        columnTemplate.tooltipText = "{xinv}, {ydate}: {value.workingValue.formatNumber('#.')} %";
        columnTemplate.width = am4core.percent(100);
        columnTemplate.height = am4core.percent(100);

        series.columns.template.column.adapter.add("fill", function(fill, target) {
            if (target.dataItem) {
                if (target.dataItem.value == 0) {
                    return am4core.color("#fafafc")
                }
                else if (target.dataItem.value >= 1 && target.dataItem.value <= 20) {
                    return am4core.color("#f60404")
                }
                else if (target.dataItem.value > 20 && target.dataItem.value <= 40) {
                    return am4core.color("#f82f1a")
                }
                else if (target.dataItem.value > 40 && target.dataItem.value <= 60) {
                    return am4core.color("#f64432")
                }
                else if (target.dataItem.value > 60 && target.dataItem.value <= 70) {
                    return am4core.color("#f67860")
                }
                else if (target.dataItem.value > 70 && target.dataItem.value <= 80) {
                    return am4core.color("#f69366")
                }
                else if (target.dataItem.value > 80 && target.dataItem.value <= 85) {
                    return am4core.color("#e5db64")
                }
                else if (target.dataItem.value > 85 && target.dataItem.value <= 90) {
                    return am4core.color("#ece349")
                }
                else if (target.dataItem.value > 90 && target.dataItem.value <= 95) {
                    return am4core.color("#ece126")
                }
                else if (target.dataItem.value > 95 && target.dataItem.value <= 100) {
                    return am4core.color("#ece005")
                }
                else {
                    return am4core.color("#0c0c0c");
                }
            }
            return fill;
        });

        var legend = new am4charts.Legend();
        legend.parent = chart.chartContainer;
        legend.data = [{
            "name": "PR < 60 %",
            "fill": am4core.color("#fe131a")
        }, {
            "name": "PR < 75 %",
            "fill": am4core.color("#d4d400")
        }, {
            "name": "PR < 100 %",
            "fill": am4core.color("#008600")
        }];

        // Export
        chart.exporting.menu = new am4core.ExportMenu();
        chart.exporting.menu.items[0].label = "Download";

        //
        yAxis.min = 0;
        yAxis.renderer.minGridDistance = 30;

        var range1 = yAxis.axisRanges.create();
        //range1.value = 1000;
        var range2 = yAxis.axisRanges.create();
        //range2.value = 2000;


        var image1 = new am4core.Image();
        var image2 = new am4core.Image();
        image1.href = "https://cdn.icon-icons.com/icons2/1875/PNG/512/sun_120349.png";
        image1.width = 15;
        image1.horizontalCenter = "middle";
        image1.verticalCenter = "middle";
        image1.dx = -55;
        image1.dy = -15;
        range1.bullet = image1;
        image2.href = "https://cdn.icon-icons.com/icons2/1173/PNG/512/1489436786-moon_81897.png";
        image2.width = 15;
        image2.horizontalCenter = "middle";
        image2.verticalCenter = "middle";
        image2.dx = -55;
        image2.dy = 500;
        range2.bullet = image2;
        //

    });
    // end am4core.ready()
</script>