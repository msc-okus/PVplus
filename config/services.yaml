# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.host: '%env(host)%'
    app.user_base: '%env(user_base)%'
    app.password_base: '%env(password_base)%'
    app.user_plant: '%env(user_plant)%'
    app.password_plant: '%env(password_plant)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $datfilePath: '%kernel.project_dir%/public/metodat'
            $uploadsPath: '%kernel.project_dir%/public/uploads'
            $tempPathBaseUrl: '%kernel.project_dir%/tempfiles'
            $filesystem: '@oneup_flysystem.public_uploads_filesystem_filesystem'
            $kernelProjectDir: '%kernel.project_dir%'
            $host: '%app.host%'
            $userBase: '%app.user_base%'
            $passwordBase: '%app.password_base%'
            $userPlant: '%app.user_plant%'
            $passwordPlant: '%app.password_plant%'


    # custom aliases for autowiring
    Nexy\Slack\Client: '@nexy_slack.client'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # MessageHandlers
    App\MessageHandler\Command\:
        resource: '../src/MessageHandler/Command'
        autoconfigure: false
        tags: [ { name: messenger.message_handler, bus: command.bus } ]

    App\MessageHandler\Event\:
        resource: '../src/MessageHandler/Event'
        autoconfigure: false
        tags: [ { name: messenger.message_handler, bus: event.bus } ]

    Symfony\Component\Asset\Context\RequestStackContext: '@assets.context'

    App\Serializer\AdminGroupsContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: [ '@App\Serializer\AdminGroupsContextBuilder.inner' ]
        autoconfigure: false

    App\Command\ForcastWriteDBCommand:
        tags: [ { name: 'console.command', command: 'pvp:forcastwritedb' } ]
